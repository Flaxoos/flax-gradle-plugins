[versions]
# Core technologies
kotlin = "1.9.0"
java = "11"
gradle = "8.2.1"
kotlin-gradleDsl = "4.0.14"
gradlePublishPlugin = "1.2.1"
# Testing tools
kotest = "5.6.2"
mockk = "1.11.0"

# Asynchronous and concurrent programming
atomicFu = "0.21.0"
kotlinx_coroutines = "1.7.2"

# Code quality tools
ktlint = "11.5.1"
detekt = "1.23.1"

# Plugins
ktlintGradle = "11.5.1"
pluginPublish = "1.2.1"
versionCheck = "0.47.0"

# Coverage and logging
kover = "0.7.3"
logging_capabilities = "0.11.1"
logback = "1.4.11"

# Miscellaneous
kotlin-css = "1.0.0-pre.640"
konform = "0.4.0"
kgit = "1.0.5"
kotlinLogging = "3.0.5"
shadow = "8.1.1"

[libraries]
# Core libraries
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx_coroutines" }
kotlin-gradleDsl = { module = "org.gradle.kotlin:gradle-kotlin-dsl-plugins", version.ref = "kotlin-gradleDsl" }

# Testing libraries
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-framework-datatest = { module = "io.kotest:kotest-framework-datatest", version.ref = "kotest" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

# Code quality plugins
ktlint-gradlePlugin = { module = "org.jlleitschuh.gradle:ktlint-gradle", version.ref = "ktlint" }

# Logging
kotlinLogging = { module = "io.github.microutils:kotlin-logging", version.ref = "kotlinLogging" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
loggingCapabilities-gradlePlugin = { module = "dev.jacomet.gradle.plugins:logging-capabilities", version.ref = "logging_capabilities" }

# Additional plugins
kover-gradlePlugin = { module = "org.jetbrains.kotlinx:kover-gradle-plugin", version.ref = "kover" }
atomicfu-gradlePlugin = { module = "org.jetbrains.kotlinx:atomicfu-gradle-plugin", version.ref = "atomicFu" }
detekt-gradlePlugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
version-gradlePlugin = { module = "com.github.ben-manes:gradle-versions-plugin", version.ref = "versionCheck" }
gradlePublishPlugin-gradlePlugin = { module = "com.gradle.publish:plugin-publish-plugin", version.ref = "gradlePublishPlugin" }
shadow-gradlePlugin = { module = "com.github.johnrengelman:shadow", version.ref = "shadow" }

# Other libraries
kotlinCssLib = { module = "org.jetbrains.kotlin-wrappers:kotlin-css", version.ref = "kotlin-css" }
konform = { module = "io.konform:konform", version.ref = "konform" }
kgit = { module = "com.github.sya-ri:kgit", version.ref = "kgit" }

[plugins]
# Core plugins
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }

# Code quality plugins
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlintGradle" }

# Utility plugins
pluginPublish = { id = "com.gradle.plugin-publish", version.ref = "pluginPublish" }
versionCheck = { id = "com.github.ben-manes.versions", version.ref = "versionCheck" }
kotlinxKover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }
